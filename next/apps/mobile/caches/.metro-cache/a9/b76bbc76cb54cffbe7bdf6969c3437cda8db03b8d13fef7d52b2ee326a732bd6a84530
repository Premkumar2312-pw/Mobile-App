{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":52,"index":52}}],"key":"nrBDtkRVez7cBhLzyaRjl+xVfvE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"scheduleTaskNotification\", {\n    enumerable: true,\n    get: function () {\n      return scheduleTaskNotification;\n    }\n  });\n  Object.defineProperty(exports, \"cancelTaskNotification\", {\n    enumerable: true,\n    get: function () {\n      return cancelTaskNotification;\n    }\n  });\n  Object.defineProperty(exports, \"scheduleRecurringReminder\", {\n    enumerable: true,\n    get: function () {\n      return scheduleRecurringReminder;\n    }\n  });\n  Object.defineProperty(exports, \"getAllScheduledNotifications\", {\n    enumerable: true,\n    get: function () {\n      return getAllScheduledNotifications;\n    }\n  });\n  Object.defineProperty(exports, \"cancelAllNotifications\", {\n    enumerable: true,\n    get: function () {\n      return cancelAllNotifications;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoNotifications = require(_dependencyMap[2], \"expo-notifications\");\n  var Notifications = _interopNamespace(_expoNotifications);\n  var scheduleTaskNotification = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator.default)(function* (task) {\n      try {\n        // Cancel existing notification if any\n        if (task.notificationId) {\n          yield Notifications.cancelScheduledNotificationAsync(task.notificationId);\n        }\n\n        // Create notification date/time\n        var taskDate = new Date(task.dueDate);\n        var _task$dueTime$split = task.dueTime.split(':'),\n          _task$dueTime$split2 = (0, _slicedToArray.default)(_task$dueTime$split, 2),\n          hours = _task$dueTime$split2[0],\n          minutes = _task$dueTime$split2[1];\n        taskDate.setHours(parseInt(hours), parseInt(minutes), 0, 0);\n\n        // Only schedule if the task is in the future and not completed\n        if (taskDate > new Date() && !task.completed) {\n          var notificationId = yield Notifications.scheduleNotificationAsync({\n            content: {\n              title: `ðŸ“š ${task.type}: ${task.title}`,\n              body: task.description || `Don't forget about your ${task.type.toLowerCase()}!`,\n              sound: true,\n              data: {\n                taskId: task.id\n              }\n            },\n            trigger: {\n              date: taskDate,\n              repeats: false\n            }\n          });\n          return notificationId;\n        }\n        return null;\n      } catch (error) {\n        console.error('Error scheduling notification:', error);\n        return null;\n      }\n    });\n    return function scheduleTaskNotification(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var cancelTaskNotification = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator.default)(function* (notificationId) {\n      try {\n        if (notificationId) {\n          yield Notifications.cancelScheduledNotificationAsync(notificationId);\n          return true;\n        }\n        return false;\n      } catch (error) {\n        console.error('Error canceling notification:', error);\n        return false;\n      }\n    });\n    return function cancelTaskNotification(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var scheduleRecurringReminder = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator.default)(function* (task) {\n      try {\n        // Cancel existing notification if any\n        if (task.notificationId) {\n          yield Notifications.cancelScheduledNotificationAsync(task.notificationId);\n        }\n\n        // Don't schedule for completed tasks\n        if (task.completed) {\n          return null;\n        }\n\n        // Create notification date/time\n        var taskDate = new Date(task.dueDate);\n        var _task$dueTime$split3 = task.dueTime.split(':'),\n          _task$dueTime$split4 = (0, _slicedToArray.default)(_task$dueTime$split3, 2),\n          hours = _task$dueTime$split4[0],\n          minutes = _task$dueTime$split4[1];\n\n        // Schedule daily reminder at the task time until due date\n        var now = new Date();\n        var reminderDate = new Date();\n        reminderDate.setHours(parseInt(hours), parseInt(minutes), 0, 0);\n\n        // If today's reminder time has passed, start from tomorrow\n        if (reminderDate <= now) {\n          reminderDate.setDate(reminderDate.getDate() + 1);\n        }\n\n        // Only schedule if reminder date is before or on due date\n        if (reminderDate <= taskDate) {\n          var notificationId = yield Notifications.scheduleNotificationAsync({\n            content: {\n              title: `ðŸ”” Daily Reminder: ${task.title}`,\n              body: `${task.type} due on ${taskDate.toLocaleDateString()}`,\n              sound: true,\n              data: {\n                taskId: task.id,\n                isRecurring: true\n              }\n            },\n            trigger: {\n              hour: parseInt(hours),\n              minute: parseInt(minutes),\n              repeats: true\n            }\n          });\n          return notificationId;\n        }\n        return null;\n      } catch (error) {\n        console.error('Error scheduling recurring reminder:', error);\n        return null;\n      }\n    });\n    return function scheduleRecurringReminder(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var getAllScheduledNotifications = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator.default)(function* () {\n      try {\n        var notifications = yield Notifications.getAllScheduledNotificationsAsync();\n        return notifications;\n      } catch (error) {\n        console.error('Error getting scheduled notifications:', error);\n        return [];\n      }\n    });\n    return function getAllScheduledNotifications() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var cancelAllNotifications = /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator.default)(function* () {\n      try {\n        yield Notifications.cancelAllScheduledNotificationsAsync();\n        return true;\n      } catch (error) {\n        console.error('Error canceling all notifications:', error);\n        return false;\n      }\n    });\n    return function cancelAllNotifications() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n});","lineCount":212,"map":[[27,2,3,0,"Object"],[27,8,3,0],[27,9,3,0,"defineProperty"],[27,23,3,0],[27,24,3,0,"exports"],[27,31,3,0],[28,4,3,0,"enumerable"],[28,14,3,0],[29,4,3,0,"get"],[29,7,3,0],[29,18,3,0,"get"],[29,19,3,0],[30,6,3,0],[30,13,3,0,"scheduleTaskNotification"],[30,37,3,0],[31,4,3,0],[32,2,3,0],[33,2,40,0,"Object"],[33,8,40,0],[33,9,40,0,"defineProperty"],[33,23,40,0],[33,24,40,0,"exports"],[33,31,40,0],[34,4,40,0,"enumerable"],[34,14,40,0],[35,4,40,0,"get"],[35,7,40,0],[35,18,40,0,"get"],[35,19,40,0],[36,6,40,0],[36,13,40,0,"cancelTaskNotification"],[36,35,40,0],[37,4,40,0],[38,2,40,0],[39,2,53,0,"Object"],[39,8,53,0],[39,9,53,0,"defineProperty"],[39,23,53,0],[39,24,53,0,"exports"],[39,31,53,0],[40,4,53,0,"enumerable"],[40,14,53,0],[41,4,53,0,"get"],[41,7,53,0],[41,18,53,0,"get"],[41,19,53,0],[42,6,53,0],[42,13,53,0,"scheduleRecurringReminder"],[42,38,53,0],[43,4,53,0],[44,2,53,0],[45,2,105,0,"Object"],[45,8,105,0],[45,9,105,0,"defineProperty"],[45,23,105,0],[45,24,105,0,"exports"],[45,31,105,0],[46,4,105,0,"enumerable"],[46,14,105,0],[47,4,105,0,"get"],[47,7,105,0],[47,18,105,0,"get"],[47,19,105,0],[48,6,105,0],[48,13,105,0,"getAllScheduledNotifications"],[48,41,105,0],[49,4,105,0],[50,2,105,0],[51,2,115,0,"Object"],[51,8,115,0],[51,9,115,0,"defineProperty"],[51,23,115,0],[51,24,115,0,"exports"],[51,31,115,0],[52,4,115,0,"enumerable"],[52,14,115,0],[53,4,115,0,"get"],[53,7,115,0],[53,18,115,0,"get"],[53,19,115,0],[54,6,115,0],[54,13,115,0,"cancelAllNotifications"],[54,35,115,0],[55,4,115,0],[56,2,115,0],[57,2,123,2],[57,6,123,2,"_babelRuntimeHelpersSlicedToArray"],[57,39,123,2],[57,42,123,2,"require"],[57,49,123,2],[57,50,123,2,"_dependencyMap"],[57,64,123,2],[58,2,123,2],[58,6,123,2,"_slicedToArray"],[58,20,123,2],[58,23,123,2,"_interopDefault"],[58,38,123,2],[58,39,123,2,"_babelRuntimeHelpersSlicedToArray"],[58,72,123,2],[59,2,123,2],[59,6,123,2,"_babelRuntimeHelpersAsyncToGenerator"],[59,42,123,2],[59,45,123,2,"require"],[59,52,123,2],[59,53,123,2,"_dependencyMap"],[59,67,123,2],[60,2,123,2],[60,6,123,2,"_asyncToGenerator"],[60,23,123,2],[60,26,123,2,"_interopDefault"],[60,41,123,2],[60,42,123,2,"_babelRuntimeHelpersAsyncToGenerator"],[60,78,123,2],[61,2,1,0],[61,6,1,0,"_expoNotifications"],[61,24,1,0],[61,27,1,0,"require"],[61,34,1,0],[61,35,1,0,"_dependencyMap"],[61,49,1,0],[62,2,1,0],[62,6,1,0,"Notifications"],[62,19,1,0],[62,22,1,0,"_interopNamespace"],[62,39,1,0],[62,40,1,0,"_expoNotifications"],[62,58,1,0],[63,2,3,7],[63,6,3,13,"scheduleTaskNotification"],[63,30,3,37],[64,4,3,37],[64,8,3,37,"_ref"],[64,12,3,37],[64,19,3,37,"_asyncToGenerator"],[64,36,3,37],[64,37,3,37,"default"],[64,44,3,37],[64,46,3,40],[64,57,3,47,"task"],[64,61,3,51],[64,63,3,56],[65,6,4,2],[65,10,4,6],[66,8,5,4],[67,8,6,4],[67,12,6,8,"task"],[67,16,6,12],[67,17,6,13,"notificationId"],[67,31,6,27],[67,33,6,29],[68,10,7,6],[68,16,7,12,"Notifications"],[68,29,7,25],[68,30,7,26,"cancelScheduledNotificationAsync"],[68,62,7,58],[68,63,7,59,"task"],[68,67,7,63],[68,68,7,64,"notificationId"],[68,82,7,78],[68,83,7,79],[69,8,8,4],[71,8,10,4],[72,8,11,4],[72,12,11,10,"taskDate"],[72,20,11,18],[72,23,11,21],[72,27,11,25,"Date"],[72,31,11,29],[72,32,11,30,"task"],[72,36,11,34],[72,37,11,35,"dueDate"],[72,44,11,42],[72,45,11,43],[73,8,12,4],[73,12,12,4,"_task$dueTime$split"],[73,31,12,4],[73,34,12,29,"task"],[73,38,12,33],[73,39,12,34,"dueTime"],[73,46,12,41],[73,47,12,42,"split"],[73,52,12,47],[73,53,12,48],[73,56,12,51],[73,57,12,52],[74,10,12,52,"_task$dueTime$split2"],[74,30,12,52],[74,37,12,52,"_slicedToArray"],[74,51,12,52],[74,52,12,52,"default"],[74,59,12,52],[74,61,12,52,"_task$dueTime$split"],[74,80,12,52],[75,10,12,11,"hours"],[75,15,12,16],[75,18,12,16,"_task$dueTime$split2"],[75,38,12,16],[76,10,12,18,"minutes"],[76,17,12,25],[76,20,12,25,"_task$dueTime$split2"],[76,40,12,25],[77,8,13,4,"taskDate"],[77,16,13,12],[77,17,13,13,"setHours"],[77,25,13,21],[77,26,13,22,"parseInt"],[77,34,13,30],[77,35,13,31,"hours"],[77,40,13,36],[77,41,13,37],[77,43,13,39,"parseInt"],[77,51,13,47],[77,52,13,48,"minutes"],[77,59,13,55],[77,60,13,56],[77,62,13,58],[77,63,13,59],[77,65,13,61],[77,66,13,62],[77,67,13,63],[79,8,15,4],[80,8,16,4],[80,12,16,8,"taskDate"],[80,20,16,16],[80,23,16,19],[80,27,16,23,"Date"],[80,31,16,27],[80,32,16,28],[80,33,16,29],[80,37,16,33],[80,38,16,34,"task"],[80,42,16,38],[80,43,16,39,"completed"],[80,52,16,48],[80,54,16,50],[81,10,17,6],[81,14,17,12,"notificationId"],[81,28,17,26],[81,37,17,35,"Notifications"],[81,50,17,48],[81,51,17,49,"scheduleNotificationAsync"],[81,76,17,74],[81,77,17,75],[82,12,18,8,"content"],[82,19,18,15],[82,21,18,17],[83,14,19,10,"title"],[83,19,19,15],[83,21,19,17],[83,27,19,23,"task"],[83,31,19,27],[83,32,19,28,"type"],[83,36,19,32],[83,41,19,37,"task"],[83,45,19,41],[83,46,19,42,"title"],[83,51,19,47],[83,53,19,49],[84,14,20,10,"body"],[84,18,20,14],[84,20,20,16,"task"],[84,24,20,20],[84,25,20,21,"description"],[84,36,20,32],[84,40,20,36],[84,67,20,63,"task"],[84,71,20,67],[84,72,20,68,"type"],[84,76,20,72],[84,77,20,73,"toLowerCase"],[84,88,20,84],[84,89,20,85],[84,90,20,86],[84,93,20,89],[85,14,21,10,"sound"],[85,19,21,15],[85,21,21,17],[85,25,21,21],[86,14,22,10,"data"],[86,18,22,14],[86,20,22,16],[87,16,22,18,"taskId"],[87,22,22,24],[87,24,22,26,"task"],[87,28,22,30],[87,29,22,31,"id"],[88,14,22,34],[89,12,23,8],[89,13,23,9],[90,12,24,8,"trigger"],[90,19,24,15],[90,21,24,17],[91,14,25,10,"date"],[91,18,25,14],[91,20,25,16,"taskDate"],[91,28,25,24],[92,14,26,10,"repeats"],[92,21,26,17],[92,23,26,19],[93,12,27,8],[94,10,28,6],[94,11,28,7],[94,12,28,8],[95,10,30,6],[95,17,30,13,"notificationId"],[95,31,30,27],[96,8,31,4],[97,8,33,4],[97,15,33,11],[97,19,33,15],[98,6,34,2],[98,7,34,3],[98,8,34,4],[98,15,34,11,"error"],[98,20,34,16],[98,22,34,18],[99,8,35,4,"console"],[99,15,35,11],[99,16,35,12,"error"],[99,21,35,17],[99,22,35,18],[99,54,35,50],[99,56,35,52,"error"],[99,61,35,57],[99,62,35,58],[100,8,36,4],[100,15,36,11],[100,19,36,15],[101,6,37,2],[102,4,38,0],[102,5,38,1],[103,4,38,1],[103,20,3,13,"scheduleTaskNotification"],[103,44,3,37,"scheduleTaskNotification"],[103,45,3,37,"_x"],[103,47,3,37],[104,6,3,37],[104,13,3,37,"_ref"],[104,17,3,37],[104,18,3,37,"apply"],[104,23,3,37],[104,30,3,37,"arguments"],[104,39,3,37],[105,4,3,37],[106,2,3,37],[106,5,38,1],[107,2,40,7],[107,6,40,13,"cancelTaskNotification"],[107,28,40,35],[108,4,40,35],[108,8,40,35,"_ref2"],[108,13,40,35],[108,20,40,35,"_asyncToGenerator"],[108,37,40,35],[108,38,40,35,"default"],[108,45,40,35],[108,47,40,38],[108,58,40,45,"notificationId"],[108,72,40,59],[108,74,40,64],[109,6,41,2],[109,10,41,6],[110,8,42,4],[110,12,42,8,"notificationId"],[110,26,42,22],[110,28,42,24],[111,10,43,6],[111,16,43,12,"Notifications"],[111,29,43,25],[111,30,43,26,"cancelScheduledNotificationAsync"],[111,62,43,58],[111,63,43,59,"notificationId"],[111,77,43,73],[111,78,43,74],[112,10,44,6],[112,17,44,13],[112,21,44,17],[113,8,45,4],[114,8,46,4],[114,15,46,11],[114,20,46,16],[115,6,47,2],[115,7,47,3],[115,8,47,4],[115,15,47,11,"error"],[115,20,47,16],[115,22,47,18],[116,8,48,4,"console"],[116,15,48,11],[116,16,48,12,"error"],[116,21,48,17],[116,22,48,18],[116,53,48,49],[116,55,48,51,"error"],[116,60,48,56],[116,61,48,57],[117,8,49,4],[117,15,49,11],[117,20,49,16],[118,6,50,2],[119,4,51,0],[119,5,51,1],[120,4,51,1],[120,20,40,13,"cancelTaskNotification"],[120,42,40,35,"cancelTaskNotification"],[120,43,40,35,"_x2"],[120,46,40,35],[121,6,40,35],[121,13,40,35,"_ref2"],[121,18,40,35],[121,19,40,35,"apply"],[121,24,40,35],[121,31,40,35,"arguments"],[121,40,40,35],[122,4,40,35],[123,2,40,35],[123,5,51,1],[124,2,53,7],[124,6,53,13,"scheduleRecurringReminder"],[124,31,53,38],[125,4,53,38],[125,8,53,38,"_ref3"],[125,13,53,38],[125,20,53,38,"_asyncToGenerator"],[125,37,53,38],[125,38,53,38,"default"],[125,45,53,38],[125,47,53,41],[125,58,53,48,"task"],[125,62,53,52],[125,64,53,57],[126,6,54,2],[126,10,54,6],[127,8,55,4],[128,8,56,4],[128,12,56,8,"task"],[128,16,56,12],[128,17,56,13,"notificationId"],[128,31,56,27],[128,33,56,29],[129,10,57,6],[129,16,57,12,"Notifications"],[129,29,57,25],[129,30,57,26,"cancelScheduledNotificationAsync"],[129,62,57,58],[129,63,57,59,"task"],[129,67,57,63],[129,68,57,64,"notificationId"],[129,82,57,78],[129,83,57,79],[130,8,58,4],[132,8,60,4],[133,8,61,4],[133,12,61,8,"task"],[133,16,61,12],[133,17,61,13,"completed"],[133,26,61,22],[133,28,61,24],[134,10,62,6],[134,17,62,13],[134,21,62,17],[135,8,63,4],[137,8,65,4],[138,8,66,4],[138,12,66,10,"taskDate"],[138,20,66,18],[138,23,66,21],[138,27,66,25,"Date"],[138,31,66,29],[138,32,66,30,"task"],[138,36,66,34],[138,37,66,35,"dueDate"],[138,44,66,42],[138,45,66,43],[139,8,67,4],[139,12,67,4,"_task$dueTime$split3"],[139,32,67,4],[139,35,67,29,"task"],[139,39,67,33],[139,40,67,34,"dueTime"],[139,47,67,41],[139,48,67,42,"split"],[139,53,67,47],[139,54,67,48],[139,57,67,51],[139,58,67,52],[140,10,67,52,"_task$dueTime$split4"],[140,30,67,52],[140,37,67,52,"_slicedToArray"],[140,51,67,52],[140,52,67,52,"default"],[140,59,67,52],[140,61,67,52,"_task$dueTime$split3"],[140,81,67,52],[141,10,67,11,"hours"],[141,15,67,16],[141,18,67,16,"_task$dueTime$split4"],[141,38,67,16],[142,10,67,18,"minutes"],[142,17,67,25],[142,20,67,25,"_task$dueTime$split4"],[142,40,67,25],[144,8,69,4],[145,8,70,4],[145,12,70,10,"now"],[145,15,70,13],[145,18,70,16],[145,22,70,20,"Date"],[145,26,70,24],[145,27,70,25],[145,28,70,26],[146,8,71,4],[146,12,71,10,"reminderDate"],[146,24,71,22],[146,27,71,25],[146,31,71,29,"Date"],[146,35,71,33],[146,36,71,34],[146,37,71,35],[147,8,72,4,"reminderDate"],[147,20,72,16],[147,21,72,17,"setHours"],[147,29,72,25],[147,30,72,26,"parseInt"],[147,38,72,34],[147,39,72,35,"hours"],[147,44,72,40],[147,45,72,41],[147,47,72,43,"parseInt"],[147,55,72,51],[147,56,72,52,"minutes"],[147,63,72,59],[147,64,72,60],[147,66,72,62],[147,67,72,63],[147,69,72,65],[147,70,72,66],[147,71,72,67],[149,8,74,4],[150,8,75,4],[150,12,75,8,"reminderDate"],[150,24,75,20],[150,28,75,24,"now"],[150,31,75,27],[150,33,75,29],[151,10,76,6,"reminderDate"],[151,22,76,18],[151,23,76,19,"setDate"],[151,30,76,26],[151,31,76,27,"reminderDate"],[151,43,76,39],[151,44,76,40,"getDate"],[151,51,76,47],[151,52,76,48],[151,53,76,49],[151,56,76,52],[151,57,76,53],[151,58,76,54],[152,8,77,4],[154,8,79,4],[155,8,80,4],[155,12,80,8,"reminderDate"],[155,24,80,20],[155,28,80,24,"taskDate"],[155,36,80,32],[155,38,80,34],[156,10,81,6],[156,14,81,12,"notificationId"],[156,28,81,26],[156,37,81,35,"Notifications"],[156,50,81,48],[156,51,81,49,"scheduleNotificationAsync"],[156,76,81,74],[156,77,81,75],[157,12,82,8,"content"],[157,19,82,15],[157,21,82,17],[158,14,83,10,"title"],[158,19,83,15],[158,21,83,17],[158,43,83,39,"task"],[158,47,83,43],[158,48,83,44,"title"],[158,53,83,49],[158,55,83,51],[159,14,84,10,"body"],[159,18,84,14],[159,20,84,16],[159,23,84,19,"task"],[159,27,84,23],[159,28,84,24,"type"],[159,32,84,28],[159,43,84,39,"taskDate"],[159,51,84,47],[159,52,84,48,"toLocaleDateString"],[159,70,84,66],[159,71,84,67],[159,72,84,68],[159,74,84,70],[160,14,85,10,"sound"],[160,19,85,15],[160,21,85,17],[160,25,85,21],[161,14,86,10,"data"],[161,18,86,14],[161,20,86,16],[162,16,86,18,"taskId"],[162,22,86,24],[162,24,86,26,"task"],[162,28,86,30],[162,29,86,31,"id"],[162,31,86,33],[163,16,86,35,"isRecurring"],[163,27,86,46],[163,29,86,48],[164,14,86,53],[165,12,87,8],[165,13,87,9],[166,12,88,8,"trigger"],[166,19,88,15],[166,21,88,17],[167,14,89,10,"hour"],[167,18,89,14],[167,20,89,16,"parseInt"],[167,28,89,24],[167,29,89,25,"hours"],[167,34,89,30],[167,35,89,31],[168,14,90,10,"minute"],[168,20,90,16],[168,22,90,18,"parseInt"],[168,30,90,26],[168,31,90,27,"minutes"],[168,38,90,34],[168,39,90,35],[169,14,91,10,"repeats"],[169,21,91,17],[169,23,91,19],[170,12,92,8],[171,10,93,6],[171,11,93,7],[171,12,93,8],[172,10,95,6],[172,17,95,13,"notificationId"],[172,31,95,27],[173,8,96,4],[174,8,98,4],[174,15,98,11],[174,19,98,15],[175,6,99,2],[175,7,99,3],[175,8,99,4],[175,15,99,11,"error"],[175,20,99,16],[175,22,99,18],[176,8,100,4,"console"],[176,15,100,11],[176,16,100,12,"error"],[176,21,100,17],[176,22,100,18],[176,60,100,56],[176,62,100,58,"error"],[176,67,100,63],[176,68,100,64],[177,8,101,4],[177,15,101,11],[177,19,101,15],[178,6,102,2],[179,4,103,0],[179,5,103,1],[180,4,103,1],[180,20,53,13,"scheduleRecurringReminder"],[180,45,53,38,"scheduleRecurringReminder"],[180,46,53,38,"_x3"],[180,49,53,38],[181,6,53,38],[181,13,53,38,"_ref3"],[181,18,53,38],[181,19,53,38,"apply"],[181,24,53,38],[181,31,53,38,"arguments"],[181,40,53,38],[182,4,53,38],[183,2,53,38],[183,5,103,1],[184,2,105,7],[184,6,105,13,"getAllScheduledNotifications"],[184,34,105,41],[185,4,105,41],[185,8,105,41,"_ref4"],[185,13,105,41],[185,20,105,41,"_asyncToGenerator"],[185,37,105,41],[185,38,105,41,"default"],[185,45,105,41],[185,47,105,44],[185,60,105,56],[186,6,106,2],[186,10,106,6],[187,8,107,4],[187,12,107,10,"notifications"],[187,25,107,23],[187,34,107,32,"Notifications"],[187,47,107,45],[187,48,107,46,"getAllScheduledNotificationsAsync"],[187,81,107,79],[187,82,107,80],[187,83,107,81],[188,8,108,4],[188,15,108,11,"notifications"],[188,28,108,24],[189,6,109,2],[189,7,109,3],[189,8,109,4],[189,15,109,11,"error"],[189,20,109,16],[189,22,109,18],[190,8,110,4,"console"],[190,15,110,11],[190,16,110,12,"error"],[190,21,110,17],[190,22,110,18],[190,62,110,58],[190,64,110,60,"error"],[190,69,110,65],[190,70,110,66],[191,8,111,4],[191,15,111,11],[191,17,111,13],[192,6,112,2],[193,4,113,0],[193,5,113,1],[194,4,113,1],[194,20,105,13,"getAllScheduledNotifications"],[194,48,105,41,"getAllScheduledNotifications"],[194,49,105,41],[195,6,105,41],[195,13,105,41,"_ref4"],[195,18,105,41],[195,19,105,41,"apply"],[195,24,105,41],[195,31,105,41,"arguments"],[195,40,105,41],[196,4,105,41],[197,2,105,41],[197,5,113,1],[198,2,115,7],[198,6,115,13,"cancelAllNotifications"],[198,28,115,35],[199,4,115,35],[199,8,115,35,"_ref5"],[199,13,115,35],[199,20,115,35,"_asyncToGenerator"],[199,37,115,35],[199,38,115,35,"default"],[199,45,115,35],[199,47,115,38],[199,60,115,50],[200,6,116,2],[200,10,116,6],[201,8,117,4],[201,14,117,10,"Notifications"],[201,27,117,23],[201,28,117,24,"cancelAllScheduledNotificationsAsync"],[201,64,117,60],[201,65,117,61],[201,66,117,62],[202,8,118,4],[202,15,118,11],[202,19,118,15],[203,6,119,2],[203,7,119,3],[203,8,119,4],[203,15,119,11,"error"],[203,20,119,16],[203,22,119,18],[204,8,120,4,"console"],[204,15,120,11],[204,16,120,12,"error"],[204,21,120,17],[204,22,120,18],[204,58,120,54],[204,60,120,56,"error"],[204,65,120,61],[204,66,120,62],[205,8,121,4],[205,15,121,11],[205,20,121,16],[206,6,122,2],[207,4,123,0],[207,5,123,1],[208,4,123,1],[208,20,115,13,"cancelAllNotifications"],[208,42,115,35,"cancelAllNotifications"],[208,43,115,35],[209,6,115,35],[209,13,115,35,"_ref5"],[209,18,115,35],[209,19,115,35,"apply"],[209,24,115,35],[209,31,115,35,"arguments"],[209,40,115,35],[210,4,115,35],[211,2,115,35],[211,5,123,1],[212,0,123,2],[212,3]],"functionMap":{"names":["<global>","scheduleTaskNotification","cancelTaskNotification","scheduleRecurringReminder","getAllScheduledNotifications","cancelAllNotifications"],"mappings":"AAA;wCCE;CDmC;sCEE;CFW;yCGE;CHkD;4CIE;CJQ;sCKE;CLQ"},"hasCjsExports":false},"type":"js/module"}]}