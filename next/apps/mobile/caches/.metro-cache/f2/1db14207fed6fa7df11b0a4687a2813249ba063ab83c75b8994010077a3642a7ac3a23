{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./NotificationsEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":156,"index":207}}],"key":"Qab5cB8LewiAQY57MV0vxh0VKT8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useLastNotificationResponse;\n    }\n  });\n  Object.defineProperty(exports, \"determineNextResponse\", {\n    enumerable: true,\n    get: function () {\n      return determineNextResponse;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _NotificationsEmitter = require(_dependencyMap[2], \"./NotificationsEmitter\");\n  /**\n   * A React hook which returns the notification response that was received most recently\n   * (a notification response designates an interaction with a notification, such as tapping on it).\n   *\n   * To clear the last notification response, use [`clearLastNotificationResponseAsync()`](#notificationsclearlastnotificationresponseasync).\n   *\n   * > If you don't want to use a hook, you can use `Notifications.getLastNotificationResponseAsync()` instead.\n   *\n   * @return The hook may return one of these three types/values:\n   * - `undefined` - until we're sure of what to return,\n   * - `null` - if no notification response has been received yet,\n   * - a [`NotificationResponse`](#notificationresponse) object - if a notification response was received.\n   *\n   * @example\n   * Responding to a notification tap by opening a URL that could be put into the notification's `data`\n   * (opening the URL is your responsibility and is not a part of the `expo-notifications` API):\n   * ```jsx\n   * import * as Notifications from 'expo-notifications';\n   * import { Linking } from 'react-native';\n   *\n   * export default function App() {\n   *   const lastNotificationResponse = Notifications.useLastNotificationResponse();\n   *   React.useEffect(() => {\n   *     if (\n   *       lastNotificationResponse &&\n   *       lastNotificationResponse.notification.request.content.data.url &&\n   *       lastNotificationResponse.actionIdentifier === Notifications.DEFAULT_ACTION_IDENTIFIER\n   *     ) {\n   *       Linking.openURL(lastNotificationResponse.notification.request.content.data.url);\n   *     }\n   *   }, [lastNotificationResponse]);\n   *   return (\n   *     // Your app content\n   *   );\n   * }\n   * ```\n   * @header listen\n   */\n  function useLastNotificationResponse() {\n    var _useState = (0, _react.useState)(undefined),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      lastNotificationResponse = _useState2[0],\n      setLastNotificationResponse = _useState2[1];\n    // useLayoutEffect ensures the listener is registered as soon as possible\n    (0, _react.useLayoutEffect)(() => {\n      var isMounted = true;\n      // Get the last response first, in case it was set earlier (even in native code on startup)\n      (0, _NotificationsEmitter.getLastNotificationResponseAsync)().then(response => {\n        if (isMounted) {\n          setLastNotificationResponse(prevResponse => determineNextResponse(prevResponse, response));\n        }\n      });\n      // Set up listener for responses that come in, and set the last response if needed\n      var subscription = (0, _NotificationsEmitter.addNotificationResponseReceivedListener)(response => setLastNotificationResponse(prevResponse => determineNextResponse(prevResponse, response)));\n      var clearResponseSubscription = (0, _NotificationsEmitter.addNotificationResponseClearedListener)(() => {\n        setLastNotificationResponse(null);\n      });\n      return () => {\n        isMounted = false;\n        subscription.remove();\n        clearResponseSubscription.remove();\n      };\n    }, []);\n    return lastNotificationResponse;\n  }\n  // returns the new response if it is different from the previous,\n  // also has to return undefined until we're sure of what to return (null or a response)\n  // the transition from response to null is invalid\n  var determineNextResponse = (prevResponse, newResponse) => {\n    if (!newResponse) {\n      return null;\n    }\n    if (!prevResponse) {\n      return newResponse;\n    }\n    return prevResponse.notification.request.identifier !== newResponse.notification.request.identifier ? newResponse : prevResponse;\n  };\n});","lineCount":105,"map":[[12,2,41,15,"Object"],[12,8,41,15],[12,9,41,15,"defineProperty"],[12,23,41,15],[12,24,41,15,"exports"],[12,31,41,15],[13,4,41,15,"enumerable"],[13,14,41,15],[14,4,41,15,"get"],[14,7,41,15],[14,18,41,15,"get"],[14,19,41,15],[15,6,41,15],[15,13,41,15,"useLastNotificationResponse"],[15,40,41,15],[16,4,41,15],[17,2,41,15],[18,2,68,0,"Object"],[18,8,68,0],[18,9,68,0,"defineProperty"],[18,23,68,0],[18,24,68,0,"exports"],[18,31,68,0],[19,4,68,0,"enumerable"],[19,14,68,0],[20,4,68,0,"get"],[20,7,68,0],[20,18,68,0,"get"],[20,19,68,0],[21,6,68,0],[21,13,68,0,"determineNextResponse"],[21,34,68,0],[22,4,68,0],[23,2,68,0],[24,2,79,2],[24,6,79,2,"_babelRuntimeHelpersSlicedToArray"],[24,39,79,2],[24,42,79,2,"require"],[24,49,79,2],[24,50,79,2,"_dependencyMap"],[24,64,79,2],[25,2,79,2],[25,6,79,2,"_slicedToArray"],[25,20,79,2],[25,23,79,2,"_interopDefault"],[25,38,79,2],[25,39,79,2,"_babelRuntimeHelpersSlicedToArray"],[25,72,79,2],[26,2,1,0],[26,6,1,0,"_react"],[26,12,1,0],[26,15,1,0,"require"],[26,22,1,0],[26,23,1,0,"_dependencyMap"],[26,37,1,0],[27,2,2,0],[27,6,2,0,"_NotificationsEmitter"],[27,27,2,0],[27,30,2,0,"require"],[27,37,2,0],[27,38,2,0,"_dependencyMap"],[27,52,2,0],[28,2,3,0],[29,0,4,0],[30,0,5,0],[31,0,6,0],[32,0,7,0],[33,0,8,0],[34,0,9,0],[35,0,10,0],[36,0,11,0],[37,0,12,0],[38,0,13,0],[39,0,14,0],[40,0,15,0],[41,0,16,0],[42,0,17,0],[43,0,18,0],[44,0,19,0],[45,0,20,0],[46,0,21,0],[47,0,22,0],[48,0,23,0],[49,0,24,0],[50,0,25,0],[51,0,26,0],[52,0,27,0],[53,0,28,0],[54,0,29,0],[55,0,30,0],[56,0,31,0],[57,0,32,0],[58,0,33,0],[59,0,34,0],[60,0,35,0],[61,0,36,0],[62,0,37,0],[63,0,38,0],[64,0,39,0],[65,0,40,0],[66,2,41,15],[66,11,41,24,"useLastNotificationResponse"],[66,38,41,51,"useLastNotificationResponse"],[66,39,41,51],[66,41,41,54],[67,4,42,4],[67,8,42,4,"_useState"],[67,17,42,4],[67,20,42,68],[67,24,42,68,"useState"],[67,30,42,76],[67,31,42,76,"useState"],[67,39,42,76],[67,41,42,77,"undefined"],[67,50,42,86],[67,51,42,87],[68,6,42,87,"_useState2"],[68,16,42,87],[68,23,42,87,"_slicedToArray"],[68,37,42,87],[68,38,42,87,"default"],[68,45,42,87],[68,47,42,87,"_useState"],[68,56,42,87],[69,6,42,11,"lastNotificationResponse"],[69,30,42,35],[69,33,42,35,"_useState2"],[69,43,42,35],[70,6,42,37,"setLastNotificationResponse"],[70,33,42,64],[70,36,42,64,"_useState2"],[70,46,42,64],[71,4,43,4],[72,4,44,4],[72,8,44,4,"useLayoutEffect"],[72,14,44,19],[72,15,44,19,"useLayoutEffect"],[72,30,44,19],[72,32,44,20],[72,38,44,26],[73,6,45,8],[73,10,45,12,"isMounted"],[73,19,45,21],[73,22,45,24],[73,26,45,28],[74,6,46,8],[75,6,47,8],[75,10,47,8,"getLastNotificationResponseAsync"],[75,31,47,40],[75,32,47,40,"getLastNotificationResponseAsync"],[75,64,47,40],[75,66,47,41],[75,67,47,42],[75,68,47,43,"then"],[75,72,47,47],[75,73,47,49,"response"],[75,81,47,57],[75,85,47,62],[76,8,48,12],[76,12,48,16,"isMounted"],[76,21,48,25],[76,23,48,27],[77,10,49,16,"setLastNotificationResponse"],[77,37,49,43],[77,38,49,45,"prevResponse"],[77,50,49,57],[77,54,49,62,"determineNextResponse"],[77,75,49,83],[77,76,49,84,"prevResponse"],[77,88,49,96],[77,90,49,98,"response"],[77,98,49,106],[77,99,49,107],[77,100,49,108],[78,8,50,12],[79,6,51,8],[79,7,51,9],[79,8,51,10],[80,6,52,8],[81,6,53,8],[81,10,53,14,"subscription"],[81,22,53,26],[81,25,53,29],[81,29,53,29,"addNotificationResponseReceivedListener"],[81,50,53,68],[81,51,53,68,"addNotificationResponseReceivedListener"],[81,90,53,68],[81,92,53,70,"response"],[81,100,53,78],[81,104,53,83,"setLastNotificationResponse"],[81,131,53,110],[81,132,53,112,"prevResponse"],[81,144,53,124],[81,148,53,129,"determineNextResponse"],[81,169,53,150],[81,170,53,151,"prevResponse"],[81,182,53,163],[81,184,53,165,"response"],[81,192,53,173],[81,193,53,174],[81,194,53,175],[81,195,53,176],[82,6,54,8],[82,10,54,14,"clearResponseSubscription"],[82,35,54,39],[82,38,54,42],[82,42,54,42,"addNotificationResponseClearedListener"],[82,63,54,80],[82,64,54,80,"addNotificationResponseClearedListener"],[82,102,54,80],[82,104,54,81],[82,110,54,87],[83,8,55,12,"setLastNotificationResponse"],[83,35,55,39],[83,36,55,40],[83,40,55,44],[83,41,55,45],[84,6,56,8],[84,7,56,9],[84,8,56,10],[85,6,57,8],[85,13,57,15],[85,19,57,21],[86,8,58,12,"isMounted"],[86,17,58,21],[86,20,58,24],[86,25,58,29],[87,8,59,12,"subscription"],[87,20,59,24],[87,21,59,25,"remove"],[87,27,59,31],[87,28,59,32],[87,29,59,33],[88,8,60,12,"clearResponseSubscription"],[88,33,60,37],[88,34,60,38,"remove"],[88,40,60,44],[88,41,60,45],[88,42,60,46],[89,6,61,8],[89,7,61,9],[90,4,62,4],[90,5,62,5],[90,7,62,7],[90,9,62,9],[90,10,62,10],[91,4,63,4],[91,11,63,11,"lastNotificationResponse"],[91,35,63,35],[92,2,64,0],[93,2,65,0],[94,2,66,0],[95,2,67,0],[96,2,68,7],[96,6,68,13,"determineNextResponse"],[96,27,68,34],[96,30,68,37,"determineNextResponse"],[96,31,68,38,"prevResponse"],[96,43,68,50],[96,45,68,52,"newResponse"],[96,56,68,63],[96,61,68,68],[97,4,69,4],[97,8,69,8],[97,9,69,9,"newResponse"],[97,20,69,20],[97,22,69,22],[98,6,70,8],[98,13,70,15],[98,17,70,19],[99,4,71,4],[100,4,72,4],[100,8,72,8],[100,9,72,9,"prevResponse"],[100,21,72,21],[100,23,72,23],[101,6,73,8],[101,13,73,15,"newResponse"],[101,24,73,26],[102,4,74,4],[103,4,75,4],[103,11,75,11,"prevResponse"],[103,23,75,23],[103,24,75,24,"notification"],[103,36,75,36],[103,37,75,37,"request"],[103,44,75,44],[103,45,75,45,"identifier"],[103,55,75,55],[103,60,76,8,"newResponse"],[103,71,76,19],[103,72,76,20,"notification"],[103,84,76,32],[103,85,76,33,"request"],[103,92,76,40],[103,93,76,41,"identifier"],[103,103,76,51],[103,106,77,10,"newResponse"],[103,117,77,21],[103,120,78,10,"prevResponse"],[103,132,78,22],[104,2,79,0],[104,3,79,1],[105,0,79,2],[105,3]],"functionMap":{"names":["<global>","useLastNotificationResponse","useLayoutEffect$argument_0","getLastNotificationResponseAsync.then$argument_0","setLastNotificationResponse$argument_0","addNotificationResponseReceivedListener$argument_0","addNotificationResponseClearedListener$argument_0","<anonymous>","determineNextResponse"],"mappings":"AAA;eCwC;oBCG;gDCG;4CCE,+DD;SDE;qEGE,0CD,+DC,CH;iFIC;SJE;eKC;SLI;KDC;CDE;qCQI;CRW"},"hasCjsExports":false},"type":"js/module"}]}